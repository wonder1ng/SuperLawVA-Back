# 🟢 공통 설정 (모든 프로필에 적용)
spring:
  profiles:
    active: prod # 기본값을 local로 설정 (개발용)

  # Bean 오버라이딩 비활성화 (중복 Bean 해결됨)
  main:
    allow-bean-definition-overriding: false

  # JPA 공통 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  # 🟢 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
      enabled: true

  # 🟢 이메일 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your_email@gmail.com}
    password: ${MAIL_PASSWORD:your_app_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          debug: true
        debug: true

  # OAuth2 공통 설정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID:your_kakao_client_id}
            client-secret: ${KAKAO_CLIENT_SECRET:your_kakao_client_secret}
            redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:5173/oauth/kakao/callback}
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
            client-name: Kakao
          naver:
            client-id: ${NAVER_CLIENT_ID:your_naver_client_id}
            client-secret: ${NAVER_CLIENT_SECRET:your_naver_client_secret}
            redirect-uri: ${NAVER_REDIRECT_URI:http://localhost:5173/oauth/naver/callback}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# 🟢 앱 설정
app:
  email:
    enabled: true
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}

# 🔵 카카오 로그인 설정 (추가 설정)
kakao:
  client-id: ${KAKAO_CLIENT_ID:your_kakao_client_id}
  client-secret: ${KAKAO_CLIENT_SECRET:your_kakao_client_secret}
  redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:5173/oauth/kakao/callback}

# 🔵 네이버 로그인 설정 (추가 설정)
naver:
  client-id: ${NAVER_CLIENT_ID:your_naver_client_id}
  client-secret: ${NAVER_CLIENT_SECRET:your_naver_client_secret}
  redirect-uri: ${NAVER_REDIRECT_URI:http://localhost:5173/oauth/naver/callback}

# 🔵 JWT 설정
jwt:
  secret: ${JWT_SECRET:your_jwt_secret_key_here_minimum_32_characters_required}
  access-token-validity: 86400000

# AES 양방향 암호화 설정 (개인정보 암호화용)
aes:
  secret-key: ${AES_SECRET_KEY:your_aes_secret_key_32_chars_long}

# 🟢 Google Cloud Document AI 설정
gcp:
  enabled: true
  project-id: ${GCP_PROJECT_ID:your_gcp_project_id}
  location: ${GCP_LOCATION:us}
  processor-id: ${GCP_PROCESSOR_ID:your_processor_id}
  credentials:
    path: classpath:service-account-key.json

# 🚀 Gemini API 설정
gemini:
  api-key: ${GEMINI_API_KEY:your_gemini_api_key}
  model-name: ${GEMINI_MODEL_NAME:gemini-2.0-flash-exp}
  api-url: ${GEMINI_API_URL:https://generativelanguage.googleapis.com}

# 계약 API 설정
contract:
  api:
    base-url: ${CONTRACT_API_BASE_URL:}

# ML API 설정
ml:
  api:
    base-url: ${ML_API_BASE_URL:http://localhost:8000}
    connection-timeout: 10000
    read-timeout: 60000

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.superlawva

# 기본 서버 설정
server:
  address: 0.0.0.0
  port: ${SERVER_PORT:8080}
  max-http-header-size: 64KB
  tomcat:
    max-swallow-size: 100MB
    max-http-post-size: 100MB

# Actuator 설정 (헬스체크용)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized

# 기본 로깅 설정
logging:
  level:
    com.superlawva: DEBUG
    com.superlawva.domain.ocr: DEBUG
    com.superlawva.domain.ocr3: DEBUG
    org.springframework.security: INFO
    org.springframework.mail: INFO
    org.springframework.data.redis: INFO
    org.hibernate.SQL: INFO
    com.sun.mail: INFO

---
# 🟢 로컬 개발 환경 프로필 (H2 + 로컬 MongoDB)
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect

  # 🟢 로컬 MongoDB 설정
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://admin:password@localhost:27017/superlawva_docs?authSource=admin}
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

---
# 🚀 운영 환경 프로필 (MySQL + MongoDB Atlas)
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/superlawva?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8}
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:your_db_password}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  # 🚀 MongoDB Atlas 설정
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/superlawva_docs}
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
        ssl:
          enabled: ${REDIS_SSL_ENABLED:false}

  web:
    resources:
      static-locations: classpath:/static/

server:
  port: ${PORT:8080}

logging:
  level:
    com.superlawva: INFO
    org.springframework.security: WARN
    org.springframework.data.redis: WARN
    org.hibernate.SQL: WARN
