version: "3.8"

services:
  # Redis만 컨테이너로 사용 (RDS MySQL 사용으로 db 제거)
  redis:
    image: redis:7-alpine
    container_name: superlawva-redis
    restart: unless-stopped
    ports:
      - "6380:6379" # 호스트 6380, 컨테이너 내부 6379
    networks: [app-network]
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data

  app:
    image: ${ECR_REGISTRY}/superlawva-backend:${IMAGE_TAG:-latest}
    container_name: superlawva-app
    restart: unless-stopped
    depends_on: [redis]
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    networks: [app-network]
    volumes:
      - /home/ubuntu/gcp-key.json:/app/gcp-key.json
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379 # 내부 네트워크에서는 6379 사용
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=60.0
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_SUPERLAWVA=INFO
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=WARN
      - LOGGING_LEVEL_ORG_HIBERNATE=WARN
      - LOGGING_LEVEL_ORG_SQL=WARN
      - TZ=Asia/Seoul # 시간대 설정 추가
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
